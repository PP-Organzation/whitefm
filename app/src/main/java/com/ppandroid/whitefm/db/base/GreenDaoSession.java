package com.ppandroid.whitefm.db.base;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import android.database.sqlite.SQLiteDatabase;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class GreenDaoSession extends AbstractDaoSession
{
    private List<DaoConfig> daoConfigList;
    private HashMap<String,AbstractDao> daos;

    public GreenDaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>,
            DaoConfig> daoConfigMap, HashMap<String, GreenDaoInterface> daoHashMap)
    {
        super(db);
        try {
            daoConfigList = new ArrayList<DaoConfig>(daoHashMap.size());
            daos = new HashMap<String, AbstractDao>(daoHashMap.size());
            Iterator<String> iterator = daoHashMap.keySet().iterator();
            while(iterator.hasNext()){
                try {
					String className = iterator.next();
					Class clazz = Class.forName(className);
					DaoConfig daoConfig = daoConfigMap.get(clazz);
					daoConfig.initIdentityScope(type);
					daoConfigList.add(daoConfig);

					GreenDaoInterface greenDaoInterface = daoHashMap.get(className);
					AbstractDao abstractDao = greenDaoInterface.createDao(daoConfig,this);
					daos.put(className,abstractDao);

					registerDao(clazz,abstractDao);
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void clear()
    {
        for (int i=0;i<daoConfigList.size();i++){
            daoConfigList.get(i).getIdentityScope().clear();
        }
    }

    public AbstractDao getAbstractDao(String className){
        return daos.get(className);
    }

}
